//-------------------------------------------------------
// Base Classes
//-------------------------------------------------------

.validation-item-flex {
    display: -moz-flex;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}

.border-box-style {
    -moz-box-sizing:    border-box;
    -webkit-box-sizing: border-box;
    box-sizing:        border-box;
}



//-------------------------------------------------------
// Transitions
//-------------------------------------------------------

@mixin transition($transition) {
    -webkit-transition: $transition;
    -moz-transition: $transition;
    -o-transition: $transition;
    transition: $transition;
}

$error-icon-container-transition: opacity 0.3s ease-in-out, max-width 0.3s ease-in-out;
$error-bar-transition: border-left 0.2s linear;
$error-message-transition: max-height 0.2s ease-in-out, opacity 0.2s ease-in-out, padding-bottom 0.2s ease-in-out;



//-------------------------------------------------------
// Outer container
//-------------------------------------------------------

.validation-item-container.ionic-style {
    @extend .border-box-style;
    
    border: 1px solid #ddd;
    margin-top: -1px;
    
    @include transition($error-bar-transition);
}

.validation-item-container.ionic-style.has-error {
    border-left: 2px solid #ef473a;
}


// Round top border corners in first list item
.list-inset ng-form:first-child .validation-item-container {
    border-top-left-radius: 2px;
    border-top-right-radius: 2px;
}

// Round borders in last item of list
.list-inset ng-form:last-child .validation-item-container {
    border-bottom-right-radius: 2px;
    border-bottom-left-radius: 2px;
}


//-------------------------------------------------------
// Item container
//-------------------------------------------------------

.validation-item-container .item-container {
    -webkit-flex: 1 1 auto;
    flex: 1 1 auto;
}

.validation-item-container .item {
    -webkit-justify-content: space-between;
    justify-content: space-between;
    
    border: 0;
    border-radius: 0;
    margin-top: 0;
    margin-bottom: 0 !important;
    margin-left: 0;
}

// Regular input error bar
.validation-item-container.has-error:not(.ionic-style) input {
    box-shadow: inset 2px 0 0 #ef473a;
}




//-------------------------------------------------------
// Icon container
//-------------------------------------------------------

.validation-item-container .icon-container {
    @extend .validation-item-flex;
    
    -webkit-flex: 0 0 auto;
    flex: 0 0 auto; 
    
    font-size: 16px;
    
    // Transition stuff
    max-width: 0;
    opacity: 0;
    @include transition($error-icon-container-transition);
}

.validation-item-container.has-error .icon-container {
    max-width: 40px;
    opacity: 1;
}

.validation-item-container .error-icon {
    -webkit-align-self: center;
    align-self: center;

    margin-left: 7px;
    //margin-right:16px;
    z-index: 100;
}

.validation-item-container.ionic-style .error-icon {
    margin-right:16px;
}


//-------------------------------------------------------
// Error message container
//-------------------------------------------------------



.validation-item-container .error-message {
    color: #ef473a;
    font-size: 14px;
    white-space: normal;
    
    // Used for the animations
    overflow: hidden;
    max-height: 0;
    opacity: 0;
    
    @include transition($error-message-transition);
}

// Side padding for ionic style
.validation-item-container.ionic-style .error-message {
    padding: 0 16px;
}

// Adds botttom padding when the error message is open
.validation-item-container.has-error.message-open.ionic-style .error-message {
    padding-bottom: 4px;
}

// Used for opacity transition, which is required for non-ionic inputs. For some reason they stay visible if the opacity transition is not used
.validation-item-container.has-error.message-open .error-message {
    opacity: 1;
}


/* 

These styles are used if multiple inputs are within a validation item 
They bunch the items closer together and remove borders between them 

I cannot think of another reason to have multiple inputs within a single validation item
unless it is to have a directive using ngModelController that requires multiple inputs
   
*/

// Removes padding in between items
.validation-item-container .item.item-input:not(:first-child) {
    padding-top:0;
}

.validation-item-container .item.item-input:not(:last-child) {
    padding-bottom:0;
}

// Repositions the select
.validation-item-container .item.item-input.item-select:first-of-type > select {
    margin-top:7px;
}

.validation-item-container .item.item-input.item-select:last-of-type > select {
    margin-bottom:5px;
}

.validation-item-container .item.item-input.item-select:first-of-type:not(:last-of-type) > select {
    margin-bottom:-2px;
}

.validation-item-container .item.item-input.item-select:last-of-type:not(:first-of-type) > select {
    margin-top:2px;
}

// Repositions the carot for the select
.validation-item-container .item.item-input.item-select:first-of-type:not(:last-of-type):after {
    margin-top:2px;
}

.validation-item-container .item.item-input.item-select:last-of-type:not(:first-of-type):after {
    margin-top:-4px;
}

